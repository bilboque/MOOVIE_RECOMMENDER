stages:         
  - test
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PYTHON_IMG: "python:3.9"

cache: 
  paths:
    - .cache/pip # directory that should be cached between jobs
    - venv/

test:    
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './checkpoint2/flaskr/'
  stage: test
  image: $PYTHON_IMG
  before_script:
    - python --version ; pip --version  # For debugging
    - cd checkpoint2/flaskr/
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pytest --version    #debug message
    - pip show pytest     #debug message
  script:
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash # download secure file
    - source venv/bin/activate
    - flask --app app run --host=0.0.0.0 & # run flask in background, necessary for tests
    - sleep 5
    - pytest # run tests using pytest

deploy:  # It only runs when both jobs in the test stage complete successfully.
  stage: deploy
  environment: production
  #image: registry.gitlab.unige.ch/courses1/pt1324/g14/flask:superioir
  script:
    - apt-get update 
    - apt install podman -y
    - podman --version
    - podman login registry.gitlab.unige.ch -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - podman build -t registry.gitlab.unige.ch/courses1/pt1324/g14/flask:superioir -f Containerfile .
    - podman push registry.gitlab.unige.ch/courses1/pt1324/g14/flask:superioir
    - echo "Pipeline finished :-)"

include:
  - template: Jobs/SAST.gitlab-ci.yml # creates SAST jobs in your CI/CD pipeline and scans your projectâ€™s source code for possible vulnerabilities

default:
  image: $PYTHON_IMG
