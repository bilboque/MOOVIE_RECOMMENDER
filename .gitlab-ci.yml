stages:          # stages
  #- build
  - test
  - deploy

#image: python:3.9 # docker image used for the job

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PYTHON_IMG: "python:3.9"

cache: 
  paths:
    - .cache/pip # directory that should be cached between jobs
    - venv/

before_script:
  - python --version ; pip --version  # For debugging
  - cd checkpoint2/flaskr/
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  - pytest --version    #debug message
  - pip show pytest     #debug message


test:    # It only starts when the job in the build stage completes successfully.
  stage: test
  #dependencies: 
    #- build # test stage depends on the build stage
  image: $PYTHON_IMG
  script:
    - cd checkpoint2/flaskr/
    - source venv/bin/activate
    - flask --app app run --host=0.0.0.0 & # run flask in background, necessary for tests
    - sleep 5
    - pytest # run tests using pytest

deploy:  # It only runs when *both* jobs in the test stage complete successfully.
  stage: deploy
  environment: production
  # image: registry.gitlab.unige.ch/courses1/pt1324/g14/flask:superioir
  script:
    - sudo apt install podman -y
    - podman --version
    #- podman pull $CI_REGISTRY_IMAGE:superioir
    #- podman build -t $CI_REGISTRY_IMAGE:superioir -f Containerfile
    #- podman push $CI_REGISTRY_IMAGE:superioir

include:
  - template: Jobs/SAST.gitlab-ci.yml # creates SAST jobs in your CI/CD pipeline and scans your projectâ€™s source code for possible vulnerabilities
